/* Generated By:JJTree: Do not edit this line. ASTClassOrInterfaceDeclaration.java */

package net.sourceforge.pmd.ast;

public class ASTClassOrInterfaceDeclaration extends AccessNode {
    public ASTClassOrInterfaceDeclaration(int id) {
        super(id);
    }

    public ASTClassOrInterfaceDeclaration(JavaParser p, int id) {
        super(p, id);
    }

    /**
     * Accept the visitor. *
     */
    public Object jjtAccept(JavaParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public boolean isNested() {
        return jjtGetParent() instanceof ASTClassOrInterfaceBodyDeclaration;
    }

    private boolean isInterface;

    public boolean isInterface() {
        return this.isInterface;
    }

    public void setInterface() {
        this.isInterface = true;
    }

    public void dump(String prefix) {
        String interfaceStr = isInterface ? "interface" : "class";
        String innerStr = isNested() ? "(nested)" : "";
        System.out.println(toString(prefix) + "(" + getImage() + ")(" + interfaceStr + ")" + innerStr);
        dumpChildren(prefix);
    }

	/**
	 * This check must be evaluated independelty for each class.  Inner classses
	 * get their own EvalPackage in order to perform independent evaluation.
	 */
	public Object visit(ASTClassOrInterfaceDeclaration node, Object data) {
	    if (!node.isInterface()) {
	        return visitClassDec(node, data);
	    } else {
	        putEvalPackage(nullEvalPackage);
	        Object o = super.visit(node, data);//interface may have inner classes, possible? if not just skip whole interface
	        removeCurrentEvalPackage();
	        return o;
	    }
	}

}
