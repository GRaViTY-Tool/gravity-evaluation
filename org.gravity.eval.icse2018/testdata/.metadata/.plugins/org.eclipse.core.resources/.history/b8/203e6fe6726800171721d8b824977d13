/***************************************************************************
                           GanttHTMLExport.java  -  description
                             -------------------
    begin                : feb 2003
    copyright            : (C) 2003 by Thomas Alexandre
    email                : alexthomas(at)ganttproject.org
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/


package net.sourceforge.ganttproject.io;

import java.io.File;
import java.util.ArrayList;

import net.sourceforge.ganttproject.GanttProject;
import net.sourceforge.ganttproject.language.GanttLanguage;
import net.sourceforge.ganttproject.resource.HumanResource;
import net.sourceforge.ganttproject.resource.HumanResourceManager;

/** 
  * Class able to export the project in HTML
  * @author Pawel Lipinski (90%)
  */
public class GanttHTMLExport {	
	private static GanttLanguage language = GanttLanguage.getInstance();				
	
	/** Write the resources */
	private static String writeResources(GanttProject appli)
	{
		StringBuffer out = new StringBuffer();				
		
		HumanResourceManager resMan=(HumanResourceManager) appli.getHumanResourceManager();
        ArrayList lor=resMan.getResources();
		
//		String []_function=RoleManager.Access.getInstance().getRoleNames();
		for(int i=0, j=lor.size(); i < j; i++) {
			HumanResource p = (HumanResource)lor.get(i);
			out.append("\t\t<resource>\n");
			out.append("\t\t\t<name>" + correct(p.toString()) + "</name>\n");
			out.append("\t\t\t<role>" + correct(p.getRole().getName()) + "</role>\n");
			out.append("\t\t\t<mail>" + (p.getMail()==null || p.getMail().length() == 0 ? " " : correct(p.getMail())) + "</mail>\n");
			out.append("\t\t\t<phone>" + (p.getPhone()==null || p.getPhone().length() == 0 ? " " : correct(p.getPhone())) + "</phone>\n");
			out.append("\t\t</resource>\n");
		}
		return out.toString();
	}
	
	
	/** Correct the charcters to be compatible with xml format */
  public static String correct(String s) {
    String res;
    res = s.replaceAll("&", "&#38;");
    res = res.replaceAll("<", "&#60;");
    res = res.replaceAll(">", "&#62;");
    res = res.replaceAll("/", "&#47;"); 
    res = res.replaceAll("\"", "&#34;");  
    return res;
  }


    /** the name of the files */	
    public static String getFileName(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 &&  i < s.length() - 1) {
           //ext = s.substring(0,i).toLowerCase();
        	 ext = s.substring(0,i);
        }
        System.out.println(ext+"  "+s);
        return ext;
    }
	
	/**Return the extention for the file*/
	public static String getExtention(File f){
		String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 &&  i < s.length() - 1) {
            ext = s.substring(i+1,s.length()).toLowerCase();
        }
        return ext;	
	}
}
