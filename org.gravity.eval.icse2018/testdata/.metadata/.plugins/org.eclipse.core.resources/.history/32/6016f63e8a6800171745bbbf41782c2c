package edu.ncsu.csc.itrust.unit.action;

import java.util.List;

import junit.framework.TestCase;

import org.junit.Test;

import edu.ncsu.csc.itrust.action.ViewFoodEntryAction;
import edu.ncsu.csc.itrust.beans.FoodEntryBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.exception.FormValidationException;
import edu.ncsu.csc.itrust.exception.ITrustException;
import edu.ncsu.csc.itrust.unit.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.unit.testutils.TestDAOFactory;

/**
 * Tests for viewing a patient's food diary
 *
 */
public class ViewFoodEntryActionTest extends TestCase {
	private ViewFoodEntryAction action;
	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private TestDataGenerator gen;
	
	/**
	 * Clears all of the tables, gets the standard data, 
	 * and includes the data for use cases 68 and 69
	 */
	@Override
	protected void setUp() throws Exception {
		gen = new TestDataGenerator();
		gen.clearAllTables();
		gen.standardData();	
	}
	
	/**
	 * Clears all of the tables
	 */
	@Override
	protected void tearDown() throws Exception {
		gen.clearAllTables();
	}
	/**
	 * Test that HCP's that are not specialists in nutrition are unable to
	 * view Food Diary Entries.
	 */
	@Test
	public void testViewingFoodDiaryWithEntriesAsNonNutritionistHCP() {
		action = new ViewFoodEntryAction(factory, 9000000000L); 
		//log in as Doctor Kelly
		List<FoodEntryBean> foodDiary = null;
		try {
			foodDiary = action.getDiary(334); 
			fail("Non Nutritionist can view Food Diary");
		} catch (ITrustException d) {
			assertEquals("You do not have permission"
					+ " to view the Food Diary!", d.getMessage());
			assertNull(foodDiary);
		}
	}
	
	/**
	 * Ensure patients can't view the bounded food diary of other patients.
	 */
	@Test
	public void testViewFoodDiaryOfOtherPatientBounded() {
		action = new ViewFoodEntryAction(factory, 333);
		try {
			action.getBoundedDiary("12/12/2014", "12/12/2014", 334);
			fail("You should not be able to view other patient's food diary.");
		} catch (ITrustException e) {
			assertEquals("You do not have permission to view the Food Diary!",
					e.getMessage());
		} catch (FormValidationException d) {
			fail("Not your food diary");
		}
	}
	
	/**
	 * Try to view it as a nutritionist that isn't designated
	 */
	@Test
	public void testNonDesignatedNutritionistBoundedTotals() {
		action = new ViewFoodEntryAction(factory, 9000000071L);
		try {
			action.getBoundedDiaryTotals("02/02/2014", "02/02/2014", 1);
			fail("Not his designated nutritionist");
		} catch (ITrustException e) {
			assertEquals("You do not have permission to view the Food Diary!",
					e.getMessage());
		} catch (FormValidationException d) {
			fail(d.getMessage());
		}
	}
}
