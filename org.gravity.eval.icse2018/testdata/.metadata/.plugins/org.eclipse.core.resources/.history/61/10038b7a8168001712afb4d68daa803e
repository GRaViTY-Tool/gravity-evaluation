/***************************************************************************
GanttCSVExport.java
-----------------
begin                : 7 juil. 2004
copyright            : (C) 2004 by Thomas Alexandre
email                : alexthomas@ganttproject.org
***************************************************************************/

/***************************************************************************
*                                                                         *
*   This program is free software; you can redistribute it and/or modify  *
*   it under the terms of the GNU General Public License as published by  *
*   the Free Software Foundation; either version 2 of the License, or     *
*   (at your option) any later version.                                   *
*                                                                         *
***************************************************************************/
package net.sourceforge.ganttproject.io;

import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

import net.sourceforge.ganttproject.GanttResourcePanel;
import net.sourceforge.ganttproject.GanttTask;
import net.sourceforge.ganttproject.GanttTree;
import net.sourceforge.ganttproject.PrjInfos;
import net.sourceforge.ganttproject.task.ResourceAssignment;

/**
 * @author athomas
 *
 * Class to export the project in cvs text format
 */
public class GanttCSVExport 
{
	private GanttTree tree;
	private GanttResourcePanel peop;
	private PrjInfos prjInfos;
	private CSVOptions csvOptions;
	
	ArrayList lot = new ArrayList();
	ArrayList resources = new ArrayList();
	
	int iMaxSize=0;
	
	boolean bFixedSize = false;
	
	/** Constructor. */
	public GanttCSVExport(PrjInfos prjInfos, GanttTree tree,
            GanttResourcePanel peop, CSVOptions csvOptions)
	{
		this.tree = tree;
	    this.peop = peop;
	    this.prjInfos = prjInfos;		
	    this.csvOptions = csvOptions;
	    
	}
	
	/** Save the project as CSV on a stream */
	public void save(OutputStream stream) {
		try {
			OutputStreamWriter out = new OutputStreamWriter(stream);
			beginToSave(out);
			out.close();
		} catch (IOException e) {
			System.out.println("Error in saving the csv file");
		} catch (Exception e) {
			System.out.println(e);
			e.printStackTrace();
		}
	}
	
	/** Start saving the csv document. */
	public void beginToSave(OutputStreamWriter out) throws IOException 
	{
		lot = tree.getAllTasks();
		resources = peop.getPeople();
	    
		
		bFixedSize = csvOptions.bFixedSize;
		
		if(csvOptions.bFixedSize)
			getMaxSize();
		
		/*writeProjectInfos(out);
		out.write("\n");*/
	    
		
		
		writeTasks(out);
	    out.write("\n");
	    writeResources(out);
	    out.write("\n");
	}
	
	/** Write the project information on the file. */
	private void writeProjectInfos(OutputStreamWriter out) throws IOException 
	{
		
	}
	
	/** @return the list of the assignment for the resources. */
	private String getAssignments(GanttTask task)
	{
		String res = "";
		ResourceAssignment[] assignment = task.getAssignments();
		for(int i=0;i<assignment.length;i++)
			res+=(assignment[i].getResource()+(i==assignment.length-1?"":
					csvOptions.sSeparatedChar.equals(";")?",":";"));
		return res;
	}
	
	private String correctField(String field)
	{
		String res="";
		for(int i=0;i<iMaxSize-field.length();i++)
			res+=" ";
		res+=field;
		return res;
	}
	
}

