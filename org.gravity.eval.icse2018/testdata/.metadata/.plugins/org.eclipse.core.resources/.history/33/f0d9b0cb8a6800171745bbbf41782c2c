package tests.net.sf.jabref;

import junit.framework.TestCase;
import net.sf.jabref.AuthorList;

/**
 * 
 * @see net.sf.jabref.AuthorList Class tested.
 * 
 * @author Christopher Oezbek <oezi@oezi.de>
 * 
 * @version 0.1 - Still fails for stuff in AuthorList that is ambiguous
 */
public class AuthorListTest extends TestCase {

	public void testSize() {

		assertEquals(0, size(""));
		assertEquals(1, size("Bar"));
		assertEquals(1, size("Foo Bar"));
		assertEquals(1, size("Foo von Bar"));
		assertEquals(1, size("von Bar, Foo"));
		assertEquals(1, size("Bar, Foo"));
		assertEquals(1, size("Bar, Jr., Foo"));
		assertEquals(1, size("Bar, Foo"));
		assertEquals(2, size("John Neumann and Foo Bar"));
		assertEquals(2, size("John von Neumann and Bar, Jr, Foo"));

		assertEquals(3, size("John von Neumann and John Smith and Black Brown, Peter"));

		String s = "John von Neumann";
		for (int i = 0; i < 25; i++) {
			assertEquals(i + 1, size(s));
			s += " and Albert Einstein";
		}
	}

	public void testGetAuthorsFirstFirstAnds() {
		assertEquals("John Smith", AuthorList.getAuthorList("John Smith")
			.getAuthorsFirstFirstAnds());
		assertEquals("John Smith and Peter Black Brown", AuthorList.getAuthorList(
			"John Smith and Black Brown, Peter").getAuthorsFirstFirstAnds());
		assertEquals("John von Neumann and John Smith and Peter Black Brown", AuthorList
			.getAuthorList("John von Neumann and John Smith and Black Brown, Peter")
			.getAuthorsFirstFirstAnds());
		assertEquals("First von Last, Jr. III", AuthorList
			.getAuthorList("von Last, Jr. III, First").getAuthorsFirstFirstAnds());
	}

}
