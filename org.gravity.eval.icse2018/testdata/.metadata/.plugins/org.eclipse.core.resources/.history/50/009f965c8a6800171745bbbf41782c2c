package edu.ncsu.csc.itrust.unit.action;

import junit.framework.TestCase;

import org.junit.Test;

import edu.ncsu.csc.itrust.action.AddFoodEntryAction;
import edu.ncsu.csc.itrust.action.ViewFoodEntryAction;
import edu.ncsu.csc.itrust.beans.FoodEntryBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.exception.FormValidationException;
import edu.ncsu.csc.itrust.exception.ITrustException;
import edu.ncsu.csc.itrust.unit.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.unit.testutils.EvilDAOFactory;
import edu.ncsu.csc.itrust.unit.testutils.TestDAOFactory;

/**
 * Tests adding food entries to the food diary
 *
 */
public class AddFoodEntryActionTest extends TestCase {

	private AddFoodEntryAction action;
	private ViewFoodEntryAction viewAction;
	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private TestDataGenerator gen;
	private FoodEntryBean foodBean;
	
	/**
	 * Clears all of the tables.
	 */
	protected void tearDown() throws Exception {
		gen.clearAllTables();
	}
	
	/**
	 * Tests that the grams of fiber per serving cannot be negative
	 */
	@Test
	public void testNumGramsFiberNotNegative() throws ITrustException {
		action = new AddFoodEntryAction(factory, 333);
		viewAction = new ViewFoodEntryAction(factory, 333);
		foodBean.setFiberGrams(0);
		try {
			String result = action.addEntry(foodBean);
			assertEquals("Success: Ice Cream for 12/12/2012 was added "
					+ "successfully!", result);
			FoodEntryBean bean = viewAction.getDiary(333).get(0);
			assertEquals(1, viewAction.getDiary(333).size());
			assertEquals(0.0, bean.getFiberGrams());
			//now try to make them negative
			foodBean.setFiberGrams(-1);
			try {
				action.addEntry(foodBean);
				fail("Grams of Fiber cannot be negative");
			} catch (FormValidationException d) {
				assertTrue(d.getMessage().contains("Grams of Fiber "
								+ "per Serving"));
			}
		} catch (FormValidationException e) {
			fail("Number of fiber grams can be 0");
		}
	}
	
	/**
	 * Test with an evil factory
	 */
	@Test
	public void testEvilFactory() {
		EvilDAOFactory evil = new EvilDAOFactory();
		action = new AddFoodEntryAction(evil, 333);
		try {
			String result = action.addEntry(foodBean);
			assertEquals("A database exception has occurred. Please see "
					+ "the log in the console for stacktrace", result);
		} catch (FormValidationException d) {
			fail(d.getMessage());
		}
		
	}


}
