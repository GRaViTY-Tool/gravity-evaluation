package edu.ncsu.csc.itrust.beans.forms;

import edu.ncsu.csc.itrust.exception.FormValidationException;

/**
 * A form to contain data coming from editing a health record.
 * 
 * A form is a bean, kinda. You could say that it's a form of a bean :) 
 * Think of a form as a real-life administrative form that you would fill out to get 
 * something done, not necessarily making sense by itself.
 */
public class HealthRecordForm {
	private String height = "0.0";
	private String weight = "0.0";
	private String isSmoker = "9";
	private String householdSmokingStatus = "1";
	private String headCircumference = "0";
	private String bloodPressureN = "0";
	private String bloodPressureD = "0";
	private String cholesterolHDL = "0";
	private String cholesterolLDL = "0";
	private String cholesterolTri = "0";

	public HealthRecordForm() {
	}
	
	public String getHouseholdSmokingStatus(){
		return householdSmokingStatus;
	}
	
	public void setHouseholdSmokingStatus(String householdSmokingStatus){
		this.householdSmokingStatus = householdSmokingStatus;
	}
	
	public String getHeadCircumference(){
		return headCircumference;
	}
	
	public void setHeadCircumference(String headCircumference){
		this.headCircumference = headCircumference;
	}

	public String getBloodPressureD() {
		return bloodPressureD;
	}

	public void setBloodPressureD(String bloodPressureD) {
		this.bloodPressureD = bloodPressureD;
	}

	public String getBloodPressureN() {
		return bloodPressureN;
	}

	public void setBloodPressureN(String bloodPressureN) {
		this.bloodPressureN = bloodPressureN;
	}

	public String getCholesterolHDL() {
		return cholesterolHDL;
	}

	public void setCholesterolHDL(String cholesterolHDL) {
		this.cholesterolHDL = cholesterolHDL;
	}

	public String getCholesterolLDL() {
		return cholesterolLDL;
	}

	public void setCholesterolLDL(String cholesterolLDL) {
		this.cholesterolLDL = cholesterolLDL;
	}

	public String getCholesterolTri() {
		return cholesterolTri;
	}

	public void setCholesterolTri(String cholesterolTri) {
		this.cholesterolTri = cholesterolTri;
	}

	public String getHeight() {
		return height;
	}

	public void setHeight(String height) {
		this.height = height;
	}

	public String getIsSmoker() {
		return isSmoker;
	}

	public void setIsSmoker(String isSmoker) {
		this.isSmoker = isSmoker;
	}

	public String getWeight() {
		return weight;
	}

	public void setWeight(String weight) {
		this.weight = weight;
	}

	public void testAllCorrectYouth() throws Exception {
		HealthRecordForm hr = new HealthRecordForm();
		hr.setBloodPressureN("999");
		hr.setBloodPressureD("999");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("657.2");
		hr.setWeight("999.9");
		validator.validateYouth(hr);
	}

	public void testZeroHeight(){
		HealthRecordForm hr = new HealthRecordForm();
		hr.setBloodPressureN("999");
		hr.setBloodPressureD("999");
		hr.setCholesterolHDL("89");
		hr.setCholesterolLDL("100");
		hr.setCholesterolTri("100");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("0");
		hr.setWeight("100");
		hr.setIsSmoker("1");
		try {
			validator.validate(hr);
			fail("Should have thrown exception");
		} catch (FormValidationException e) {
			//good
		}
	}

	public void testAllCorrectBaby() throws Exception {
		HealthRecordForm hr = new HealthRecordForm();
		hr.setHeadCircumference("8.0");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("657.2");
		hr.setWeight("999.9");
		validator.validateBaby(hr);
	}

	public void testZeroWeight(){
		HealthRecordForm hr = new HealthRecordForm();
		hr.setBloodPressureN("999");
		hr.setBloodPressureD("999");
		hr.setCholesterolHDL("89");
		hr.setCholesterolLDL("100");
		hr.setCholesterolTri("100");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("100");
		hr.setWeight("0");
		hr.setIsSmoker("1");
		try {
			validator.validate(hr);
			fail("Should have thrown exception");
		} catch (FormValidationException e) {
			//good
		}
	}

	public void testJustAboveBoundaries() throws Exception {
		try {
			HealthRecordForm hr = new HealthRecordForm();
			hr.setBloodPressureN("1000");
			hr.setBloodPressureD("1000");
			hr.setCholesterolHDL("90");
			hr.setCholesterolLDL("601");
			hr.setCholesterolTri("601");
			hr.setHeight("99.01");
			hr.setWeight("9999.01");
			hr.setIsSmoker("Tru");
			validator.validate(hr);
			fail("exception should have been thrown");
		} catch (FormValidationException e) {
			assertEquals("Systolic blood pressure must be an integer in [0,999]", e.getErrorList().get(0));
			assertEquals("Diastolic blood pressure must be an integer in [0,999]", e.getErrorList().get(1));
			assertEquals("Cholesterol HDL must be an integer in [0,89]", e.getErrorList().get(2));
			assertEquals("Cholesterol LDL must be an integer in [0,600]", e.getErrorList().get(3));
			assertEquals("Cholesterol Triglycerides must be an integer in [100,600]", e.getErrorList().get(4));
			assertEquals("Height: Up to 3-digit number + up to 1 decimal place", e.getErrorList().get(5));
			assertEquals("Weight: Up to 4-digit number + up to 1 decimal place", e.getErrorList().get(6));
			assertEquals("Smoker must be an integer in [0,10]", e.getErrorList().get(7));
			assertEquals(8, e.getErrorList().size());
		}
	}

	public void testZeroWeightYouth(){
		HealthRecordForm hr = new HealthRecordForm();
		hr.setBloodPressureN("999");
		hr.setBloodPressureD("999");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("100");
		hr.setWeight("0");
		try {
			validator.validateYouth(hr);
			fail("Should have thrown exception");
		} catch (FormValidationException e) {
			//good
		}
	}

	public void testZeroHeightBaby(){
		HealthRecordForm hr = new HealthRecordForm();
		hr.setHeadCircumference("8.0");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("0");
		hr.setWeight("100");
		try {
			validator.validateBaby(hr);
			fail("Should have thrown exception");
		} catch (FormValidationException e) {
			//good
		}
	}

	public void testAllCorrect() throws Exception {
		HealthRecordForm hr = new HealthRecordForm();
		hr.setBloodPressureN("999");
		hr.setBloodPressureD("999");
		hr.setCholesterolHDL("89");
		hr.setCholesterolLDL("100");
		hr.setCholesterolTri("100");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("657.2");
		hr.setWeight("999.9");
		hr.setIsSmoker("1");
		validator.validate(hr);
	}

	public void testZeroWeightBaby(){
		HealthRecordForm hr = new HealthRecordForm();
		hr.setHeadCircumference("8.0");
		hr.setHouseholdSmokingStatus("1");
		hr.setHeight("100");
		hr.setWeight("0");
		try {
			validator.validateBaby(hr);
			fail("Should have thrown exception");
		} catch (FormValidationException e) {
			//good
		}
	}
}
