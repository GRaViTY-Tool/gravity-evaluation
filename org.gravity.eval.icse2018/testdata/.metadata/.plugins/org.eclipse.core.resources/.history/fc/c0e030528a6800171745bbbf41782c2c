package edu.ncsu.csc.itrust.action;

import java.util.List;
import edu.ncsu.csc.itrust.beans.OfficeVisitBean;
import edu.ncsu.csc.itrust.beans.ReferralBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO;
import edu.ncsu.csc.itrust.dao.mysql.ReferralDAO;
import edu.ncsu.csc.itrust.exception.DBException;
import edu.ncsu.csc.itrust.exception.ITrustException;

/**
 */
public class ViewReceivingReferralsAction {

	private ReferralDAO referralDAO;
	private OfficeVisitDAO ovDAO;
	private long hcpID;
	
	public ViewReceivingReferralsAction(DAOFactory factory, long patientID) throws ITrustException {
		this.referralDAO = factory.getReferralDAO();
		this.ovDAO = factory.getOfficeVisitDAO();
		this.hcpID = patientID;
	}

	public List<ReferralBean> getReferralsForReceivingHCP() throws DBException{
		return referralDAO.getReferralsForReceivingHCP(hcpID);
	}
	
	public int getReferralsForReceivingHCPUnread() throws DBException{
		return referralDAO.getReferralsForReceivingHCPUnread(hcpID).size();
	}
	
	public ReferralBean getReferralByID(int id) throws DBException{
		return referralDAO.getReferral(id);
	}
	
	public boolean updateReferral(ReferralBean bean) throws DBException {
		referralDAO.editReferral(bean);
		return true;
	}
	
	public OfficeVisitBean getOVDate(long id) throws DBException {
		return ovDAO.getOfficeVisit(id);
	}

	/**
	 * Test method for {@link edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction#getReferralsForReceivingHCP()}.
	 * @throws DBException 
	 */
	public void testGetReferralsForReceivingHCP() throws DBException {
		List<ReferralBean> bean = action.getReferralsForReceivingHCP();
		assertEquals(9, bean.size());
		assertEquals(1, bean.get(0).getPriority());
		assertEquals(1, bean.get(1).getPriority());
		assertEquals(1, bean.get(2).getPriority());
		assertEquals(1, bean.get(3).getPriority());
		assertEquals(2, bean.get(4).getPriority());
		assertEquals(2, bean.get(5).getPriority());
		assertEquals(3, bean.get(6).getPriority());
		
		assertEquals(1, bean.get(1).getId());
		assertEquals(1, bean.get(1).getPriority());
		assertEquals(2L, bean.get(1).getPatientID());
		assertEquals(9000000000L, bean.get(1).getSenderID());
		assertEquals(9000000003L, bean.get(1).getReceiverID());
		assertEquals("Gandalf will make sure that the virus does not get past your immune system", bean.get(1).getReferralDetails());
		assertEquals(955L, bean.get(1).getOvid());
		assertFalse(bean.get(1).isViewedByHCP());
		assertFalse(bean.get(1).isViewedByPatient());
		
	}
	

}
