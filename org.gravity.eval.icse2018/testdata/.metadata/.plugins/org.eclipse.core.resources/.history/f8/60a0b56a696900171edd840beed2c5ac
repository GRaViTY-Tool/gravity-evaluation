package edu.ncsu.csc.itrust.unit.action;

import java.util.List;

import junit.framework.TestCase;
import edu.ncsu.csc.itrust.action.ViewHealthRecordsHistoryAction;
import edu.ncsu.csc.itrust.beans.CDCStatsBean;
import edu.ncsu.csc.itrust.beans.HealthRecord;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.dao.mysql.CDCWeightStatsDAO;
import edu.ncsu.csc.itrust.dao.mysql.PatientDAO;
import edu.ncsu.csc.itrust.exception.ITrustException;
import edu.ncsu.csc.itrust.unit.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.unit.testutils.TestDAOFactory;

public class ViewHealthRecordsHistoryActionTest extends TestCase{
	
	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private TestDataGenerator gen = new TestDataGenerator();
	private ViewHealthRecordsHistoryAction action;

	@Override
	protected void setUp() throws Exception {
		gen.clearAllTables();
		gen.standardData();
		
		action = new ViewHealthRecordsHistoryAction(factory, "102", 9000000001L);
	}
	
	public void testGetPatientName() throws Exception{
		action = new ViewHealthRecordsHistoryAction(factory, "101", 101L);
		String patientName = action.getPatientName();
		assertEquals("Brynn McClain", patientName);		
		
	}
	
	public void testGetWeightZScore() throws ITrustException {
		List<HealthRecord> records = action.getAllPatientHealthRecords();
		HealthRecord testRecord = records.get(0);
		CDCWeightStatsDAO cdcStatsDAO = new CDCWeightStatsDAO(factory);
		PatientDAO patientDAO = new PatientDAO(factory);
		
		//Get the weight associated with the health record and convert into kg
		double weight = testRecord.getWeight() / 2.2046;
		//Get the patient's gender
		int sex = 0;
		if (patientDAO.getPatient(102L).getGender().toString().equals("Male")) {
			sex = 1;
		} else {
			sex = 2;
		}
		//Get the patient's age
		float age = 0;
		if (testRecord.getVisitDate().equals(patientDAO.getPatient(102L).getDateOfBirth())) {
			//If the patient's birthdate equals the office visit date, 
			//the patient's age is 0 months
			age = (float) 0.0;
		} else {
			//Otherwise add 0.5 to the patient's age in months
			age = (float) (action.calculateAgeInMonthsAtOfficeVisit(testRecord.getOfficeVisitID()) + 0.5);
		}
		CDCStatsBean testBean = cdcStatsDAO.getCDCStats(sex, age);
		
		//Get the L, M, and S values
		double L = testBean.getL();
		double M = testBean.getM();
		double S = testBean.getS();
		
		//Calculate the z score
		double testScore;
		if (L == 0.0) {
			//If L is 0 then calculate the z score differently
			testScore = Math.log(weight / M) / S;
		} else {
			testScore = (Math.pow((weight / M), L) - 1) / (L * S);
		} 
		testScore = Double.parseDouble(String.format("%.2f", testScore));
		
		assertEquals(testScore, action.getWeightZScore(testRecord));
	}
}




