package edu.ncsu.csc.itrust.unit.action;

import java.util.List;

import junit.framework.TestCase;

import org.junit.Test;

import edu.ncsu.csc.itrust.action.AddExerciseEntryAction;
import edu.ncsu.csc.itrust.action.ViewExerciseEntryAction;
import edu.ncsu.csc.itrust.beans.ExerciseEntryBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.exception.FormValidationException;
import edu.ncsu.csc.itrust.exception.ITrustException;
import edu.ncsu.csc.itrust.unit.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.unit.testutils.EvilDAOFactory;
import edu.ncsu.csc.itrust.unit.testutils.TestDAOFactory;

/**
 * Tests adding exercise entries to the exercise diary
 *
 */
public class AddExerciseEntryActionTest extends TestCase {

	private AddExerciseEntryAction action;
	private ViewExerciseEntryAction viewAction;
	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private TestDataGenerator gen;
	private ExerciseEntryBean exerciseBean;
	private EvilDAOFactory evil = new EvilDAOFactory();
	
	@Override
	protected void setUp() throws Exception {
		gen = new TestDataGenerator();
		gen.clearAllTables();
		gen.standardData();	
		exerciseBean = new ExerciseEntryBean();
		exerciseBean.setStrDate("12/12/2012");
		exerciseBean.setExerciseType("Weight Training");
		exerciseBean.setStrName("Bench Press");
		exerciseBean.setCaloriesBurned(50);
		exerciseBean.setHoursWorked(1);
		exerciseBean.setNumSets(3);
		exerciseBean.setNumReps(10);
	}
	
	/**
	 * Clears all of the tables.
	 */
	protected void tearDown() throws Exception {
		gen.clearAllTables();
	}
	
	/**
	 * Tests that a patient can add a new exercise entry to an empty diary.
	 * Log in as the patient Random Person who has no prior exercise entries.
	 */
	@Test
	public void testAddNewExerciseEntryToEmptyDiary() {
		action = new AddExerciseEntryAction(factory, 1);
		viewAction = new ViewExerciseEntryAction(factory, 1);
		try {
			String result = action.addEntry(exerciseBean);
			assertEquals("Success: Bench Press for 12/12/2012 was added "
					+ "successfully!", result);
			try {
				List<ExerciseEntryBean> exerciseDiary = viewAction.getDiary(1);
				assertEquals(3, exerciseDiary.size());
				ExerciseEntryBean bean = exerciseDiary.get(0);
				assertEquals(81, bean.getEntryID());
				assertEquals("12/14/2012", bean.getStrDate().toString());
				assertEquals("Weights", bean.getExerciseType().name());
				assertEquals("Bench Press", bean.getStrName());
				assertEquals(50, bean.getCaloriesBurned());
				assertEquals(0.5, bean.getHoursWorked());
				assertEquals(3, bean.getNumSets());
				assertEquals(10, bean.getNumReps());
				assertEquals(1, bean.getPatientID());
				
				List<ExerciseEntryBean> exerciseTotals = 
						viewAction.getDiaryTotals(1);
				assertEquals(2, exerciseTotals.size());
				ExerciseEntryBean total = exerciseTotals.get(0);
				assertEquals("12/14/2012", total.getStrDate());
				assertEquals(50, total.getCaloriesBurned());
				assertEquals(0.5, total.getHoursWorked());
				ExerciseEntryBean total2 = exerciseTotals.get(1);
				assertEquals("12/12/2012", total2.getStrDate());
				assertEquals(150, total2.getCaloriesBurned());
				assertEquals(2.0, total2.getHoursWorked(), .001);
			} catch (ITrustException e) {
				fail(e.getMessage());
			}
		} catch (FormValidationException e) {
			fail(e.getMessage());
		}
	}
	
	/**
	 * Test with an evil factory
	 */
	@Test
	public void testEvilFactory() {
		action = new AddExerciseEntryAction(evil, 1);
		try {
			String result = action.addEntry(exerciseBean);
			assertEquals("A database exception has occurred. Please see "
					+ "the log in the console for stacktrace", result);
		} catch (FormValidationException d) {
			fail(d.getMessage());
		}
	}

}
