/*
 * Decompiled with CFR 0_114.
 */
package quj;

import java.io.Serializable;
import java.util.Vector;

class Member
implements Serializable {
    boolean isStaticVar;
    boolean isTransientVar;
    boolean isFinalVar;
    String protection;
    String type;
    String name;
    String defaultValue;

    Member() {
    }

    boolean isStatic() {
        return this.isStaticVar;
    }

    void setStatic(boolean bl) {
        this.isStaticVar = bl;
    }

    boolean isTransient() {
        return this.isTransientVar;
    }

    void setTransient(boolean bl) {
        this.isTransientVar = bl;
    }

    boolean isFinal() {
        return this.isFinalVar;
    }

    void setFinal(boolean bl) {
        this.isFinalVar = bl;
    }

    void setProtection(String string) {
        this.protection = string;
    }

    String getProtection() {
        if (this.protection == null) {
            return "";
        }
        return this.protection;
    }

    void setType(String string) {
        this.type = string;
    }

    String getType() {
        if (this.type == null) {
            return "int";
        }
        return this.type;
    }

    void setName(String string) {
        this.name = string;
    }

    String getName() {
        if (this.name == null) {
            return "";
        }
        return this.name;
    }

    void setDefaultValue(String string) {
        this.defaultValue = string;
    }

    String getDefaultValue() {
        if (this.defaultValue == null) {
            return "";
        }
        return this.defaultValue;
    }

    public String toString() {
        return this.getType() + " " + this.getName();
    }

	void editMember(Member member) {
	    if (member != null) {
	        this.protectionText.setText(member.getProtection());
	        this.finalCheckBox.setSelected(member.isFinal());
	        this.staticCheckBox.setSelected(member.isStatic());
	        this.transientCheckBox.setSelected(member.isTransient());
	        this.typeText.setText(member.getType());
	        this.nameText.setText(member.getName());
	        this.defaultValueText.setText(member.getDefaultValue());
	    } else {
	        this.clearFields();
	    }
	}

	void saveMember(Member member) {
	    if (member == null) {
	        return;
	    }
	    member.setProtection(this.protectionText.getText());
	    member.setFinal(this.finalCheckBox.isSelected());
	    member.setStatic(this.staticCheckBox.isSelected());
	    member.setTransient(this.transientCheckBox.isSelected());
	    member.setType(this.typeText.getText());
	    member.setName(this.nameText.getText());
	    member.setDefaultValue(this.defaultValueText.getText());
	}

	void editMethod(Method method) {
	    if (method != null) {
	        this.constructorCheckBox.setSelected(method.isConstructor());
	        this.finalCheckBox.setSelected(method.isFinal());
	        this.staticCheckBox.setSelected(method.isStatic());
	        this.abstractCheckBox.setSelected(method.isAbstract());
	        this.typeText.setText(method.getType());
	        this.nameText.setText(method.getName());
	        this.protectionText.setText(method.getProtection());
	        this.defaultValueText.setText(method.getDefaultValue());
	        StringBuffer stringBuffer = new StringBuffer();
	        Vector vector = method.getArgumentNames();
	        int n = 0;
	        while (n < vector.size()) {
	            stringBuffer.append(method.getArgument((String)vector.elementAt(n)) + " ");
	            stringBuffer.append((String)vector.elementAt(n) + "\n");
	            ++n;
	        }
	        this.argumentsText.setText(stringBuffer.toString());
	        stringBuffer = new StringBuffer();
	        vector = method.getExceptions();
	        int n2 = 0;
	        while (n2 < vector.size()) {
	            stringBuffer.append((String)vector.elementAt(n2) + "\n");
	            ++n2;
	        }
	        this.exceptionsText.setText(stringBuffer.toString());
	    } else {
	        this.clearFields();
	    }
	}
}

