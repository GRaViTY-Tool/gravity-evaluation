package edu.ncsu.csc.itrust.unit.action;

import junit.framework.TestCase;

import org.junit.Test;

import edu.ncsu.csc.itrust.action.AddFoodEntryAction;
import edu.ncsu.csc.itrust.action.ViewFoodEntryAction;
import edu.ncsu.csc.itrust.beans.FoodEntryBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.exception.FormValidationException;
import edu.ncsu.csc.itrust.unit.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.unit.testutils.EvilDAOFactory;
import edu.ncsu.csc.itrust.unit.testutils.TestDAOFactory;

/**
 * Tests adding food entries to the food diary
 *
 */
public class AddFoodEntryActionTest extends TestCase {

	private AddFoodEntryAction action;
	private ViewFoodEntryAction viewAction;
	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private TestDataGenerator gen;
	private FoodEntryBean foodBean;
	
	@Override
	protected void setUp() throws Exception {
		gen = new TestDataGenerator();
		gen.clearAllTables();
		gen.standardData();	
		foodBean = new FoodEntryBean();
		foodBean.setDateEatenStr("12/12/2012");
		foodBean.setMealType("Breakfast");
		foodBean.setFood("Ice Cream");
		foodBean.setServings(2.0);
		foodBean.setCalories(30.5);
		foodBean.setFatGrams(4.0);
		foodBean.setMilligramsSodium(2.0);
		foodBean.setCarbGrams(6.0);
		foodBean.setSugarGrams(1.0);
		foodBean.setFiberGrams(4.3);
		foodBean.setProteinGrams(3.5);
	}
	
	/**
	 * Clears all of the tables.
	 */
	protected void tearDown() throws Exception {
		gen.clearAllTables();
	}
	
	/**
	 * Ensures that only breakfast, lunch, dinner, or snack is allowed
	 * as the meal type
	 */
	@Test
	public void testInvalidMealType() {
		action = new AddFoodEntryAction(factory, 333);
		try {
			foodBean.setMealType("Brunch");
			action.addEntry(foodBean);
			fail("Invalid meal type");
		} catch (IllegalArgumentException d) {
			assertEquals("Meal Type Brunch does not exist", d.getMessage());
		} catch (FormValidationException e) {
			fail("Setting meal type to brunch should have failed");
		}
	}
	
	/**
	 * Test with an evil factory
	 */
	@Test
	public void testEvilFactory() {
		EvilDAOFactory evil = new EvilDAOFactory();
		action = new AddFoodEntryAction(evil, 333);
		try {
			String result = action.addEntry(foodBean);
			assertEquals("A database exception has occurred. Please see "
					+ "the log in the console for stacktrace", result);
		} catch (FormValidationException d) {
			fail(d.getMessage());
		}
		
	}


}
