package tests.net.sf.jabref.imports;

import junit.framework.TestCase;
import net.sf.jabref.imports.IsiImporter;

/**
 * Test cases for the IsiImporter
 * 
 * @author $Author: coezbek $
 * @version $Revision: 2488 $ ($Date: 2007-11-14 01:25:31 +0100 (Wed, 14 Nov 2007) $)
 * 
 */
public class IsiImporterTest extends TestCase {

	protected void tearDown() throws Exception {
		super.tearDown();
	}

	public void testIsiAuthorsConvert() {
		assertEquals(
			"James Brown and James Marc Brown and Brown, J. M. and Brown, J. and Brown, J. M. and Brown, J.",
			IsiImporter
				.isiAuthorsConvert("James Brown and James Marc Brown and Brown, J.M. and Brown, J. and Brown, J.M. and Brown, J."));

		assertEquals(
			"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.",
			IsiImporter
				.isiAuthorsConvert("Joffe, Hadine; Hall, Janet E; Gruber, Staci; Sarmiento, Ingrid A; Cohen, Lee S; Yurgelun-Todd, Deborah; Martin, Kathryn A"));

	}

	public void testIsiAuthorConvert() {
		assertEquals("James Brown", IsiImporter.isiAuthorConvert("James Brown"));
		assertEquals("James Marc Brown", IsiImporter.isiAuthorConvert("James Marc Brown"));
		assertEquals("Brown, J. M.", IsiImporter.isiAuthorConvert("Brown, J.M."));
		assertEquals("Brown, J.", IsiImporter.isiAuthorConvert("Brown, J."));
		assertEquals("Brown, J. M.", IsiImporter.isiAuthorConvert("Brown, JM"));
		assertEquals("Brown, J.", IsiImporter.isiAuthorConvert("Brown, J"));
		assertEquals("Brown, James", IsiImporter.isiAuthorConvert("Brown, James"));
		assertEquals("Hall, Janet E.", IsiImporter.isiAuthorConvert("Hall, Janet E"));
		assertEquals("", IsiImporter.isiAuthorConvert(""));
	}

	public void testGetExtensions() {
		// new IsiImporter().getExtensions();
	}

	public void testGetIsCustomImporter() {
		IsiImporter importer = new IsiImporter();
		assertEquals(false, importer.getIsCustomImporter());
	}
}
