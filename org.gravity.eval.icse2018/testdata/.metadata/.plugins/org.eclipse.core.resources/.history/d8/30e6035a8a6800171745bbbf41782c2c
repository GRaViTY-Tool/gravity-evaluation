package edu.ncsu.csc.itrust.unit.report;

import java.util.List;

import edu.ncsu.csc.itrust.beans.PatientBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.dao.mysql.PatientDAO;
import edu.ncsu.csc.itrust.report.DemographicReportFilter;
import edu.ncsu.csc.itrust.report.DemographicReportFilter.DemographicReportFilterType;
import edu.ncsu.csc.itrust.unit.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.unit.testutils.TestDAOFactory;
import junit.framework.TestCase;

public class DemographicReportFilterTest extends TestCase {

	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private PatientDAO pDAO = factory.getPatientDAO();
	private List<PatientBean> allPatients;
	private DemographicReportFilter filter;
	private TestDataGenerator gen = new TestDataGenerator();

	public void testFilterByChildLastNameNoResult() throws Exception {
		filter = new DemographicReportFilter(DemographicReportFilterType.CHILD_LAST_NAME, "Dalpe", factory);
		List<PatientBean> res = filter.filter(allPatients);
		assertTrue(res.isEmpty());
	}
	
	public void testFilterByInsuranceZip() throws Exception {
		filter = new DemographicReportFilter(DemographicReportFilterType.INSURE_ZIP, "19003-2715", factory);
		List<PatientBean> res = filter.filter(allPatients);
		assertEquals(5, res.size());
		assertTrue(res.get(0).getMID() == 2L);
		assertTrue(res.get(1).getMID() == 22L);
		assertTrue(res.get(2).getMID() == 25L);
		assertTrue(res.get(3).getMID() == 23L);
		assertTrue(res.get(4).getMID() == 24L);
	}

	public void testFilterByInsuranceZipNoResult() throws Exception {
		filter = new DemographicReportFilter(DemographicReportFilterType.INSURE_ZIP, "Dalpe", factory);
		List<PatientBean> res = filter.filter(allPatients);
		assertTrue(res.isEmpty());
	}
	
	public void testFilterByICState() throws Exception {
		PatientBean testPat = pDAO.getPatient(1L);
		testPat.setIcState("MO");
		pDAO.editPatient(testPat, 9000000000L);
		filter = new DemographicReportFilter(DemographicReportFilterType.INSURE_STATE, "MO", factory);
		List<PatientBean> filteredList = filter.filter(pDAO.getAllPatients());
		
		int originalFromMOSize = 0;
		for (PatientBean p : allPatients) {
			if (p.getIcState().equals("MO"))
				originalFromMOSize++;
		}
		
		assertEquals(originalFromMOSize + 1, filteredList.size());
		PatientBean patient = filteredList.get(0);
		assertEquals(1L, patient.getMID());
	}
	
	public void testFilterByICAddress1() throws Exception {
		PatientBean testPat = pDAO.getPatient(1L);
		testPat.setIcAddress1("FilterTest");
		pDAO.editPatient(testPat, 9000000000L);
		filter = new DemographicReportFilter(DemographicReportFilterType.INSURE_ADDR, "FilterTest", factory);
		List<PatientBean> filteredList = filter.filter(pDAO.getAllPatients());
		
		assertEquals(1, filteredList.size());
		PatientBean patient = filteredList.get(0);
		assertEquals(1L, patient.getMID());
	}
}
