package test.net.sourceforge.pmd.ast;

import net.sourceforge.pmd.PMD;
import net.sourceforge.pmd.ast.ASTFieldDeclaration;
import net.sourceforge.pmd.ast.ASTType;
import net.sourceforge.pmd.ast.ASTVariableDeclarator;
import net.sourceforge.pmd.ast.ASTVariableDeclaratorId;
import test.net.sourceforge.pmd.testframework.ParserTst;

public class ASTFieldDeclarationTest extends ParserTst {

    private static final String TEST1 =
            "class Foo {" + PMD.EOL +
            " String[] foo;" + PMD.EOL +
            "}";

    private static final String TEST2 =
            "class Foo {" + PMD.EOL +
            " String[][][] foo;" + PMD.EOL +
            "}";

    private static final String TEST3 =
            "interface Foo {" + PMD.EOL +
            " int BAR = 6;" + PMD.EOL +
            "}";

    private static final String TEST4 =
            "public enum Foo {" + PMD.EOL +
            " FOO(1);" + PMD.EOL +
            " private int x;" + PMD.EOL +
            "}";

    public void testGetVariableName() {
        int id = 0;
        ASTFieldDeclaration n = new ASTFieldDeclaration(id++);
        ASTType t = new ASTType(id++);
        ASTVariableDeclarator decl = new ASTVariableDeclarator(id++);
        ASTVariableDeclaratorId declid = new ASTVariableDeclaratorId(id++);
        n.jjtAddChild(t, 0);
        t.jjtAddChild(decl, 0);
        decl.jjtAddChild(declid, 0);
        declid.setImage("foo");

        assertEquals("foo", n.getVariableName());

    }
}
