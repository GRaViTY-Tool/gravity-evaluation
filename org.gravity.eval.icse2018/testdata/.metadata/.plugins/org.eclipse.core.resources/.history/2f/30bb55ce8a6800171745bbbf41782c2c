package tests.net.sf.jabref.util;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.sf.jabref.util.XMPSchemaBibtex;

import org.jempbox.impl.XMLUtil;
import org.jempbox.xmp.XMPMetadata;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import tests.net.sf.jabref.JabRefTestCase;

public class XMPSchemaBibtexTest extends JabRefTestCase {

	protected void setUp() throws Exception {
		super.setUp();
	}

	protected void tearDown() throws Exception {
		super.tearDown();
	}

	public void testXMPSchemaBibtexXMPMetadata() throws IOException {

		XMPMetadata xmp = new XMPMetadata();
		XMPSchemaBibtex bibtex = new XMPSchemaBibtex(xmp);

		assertNotNull(bibtex.getElement());
		assertEquals("rdf:Description", bibtex.getElement().getTagName());

	}

	public void testXMPSchemaBibtexElement()
		throws ParserConfigurationException {
		DocumentBuilderFactory builderFactory = DocumentBuilderFactory
			.newInstance();
		DocumentBuilder builder = builderFactory.newDocumentBuilder();
		Element e = builder.newDocument().createElement("rdf:Description");

		XMPSchemaBibtex bibtex = new XMPSchemaBibtex(e, "bibtex");

		assertEquals(e, bibtex.getElement());
		assertEquals("rdf:Description", bibtex.getElement().getTagName());
	}

	public void testSetRemoveGetSequenceDateListString() {
		// We don't use this...
	}

	public void testGetTextContent() throws IOException {
		String bibtexString = "<bibtex:year>2003</bibtex:year>\n"
			+ "<bibtex:title>\n   "
			+ "Beach sand convolution by surf-wave optimzation\n"
			+ "</bibtex:title>\n"
			+ "<bibtex:bibtexkey>OezbekC06</bibtex:bibtexkey>\n";

		bibtexString = XMPUtilTest.bibtexXPacket(XMPUtilTest
			.bibtexDescription(bibtexString));

		Document d = XMLUtil.parse(new ByteArrayInputStream(bibtexString
			.getBytes()));

		assertEquals("Beach sand convolution by surf-wave optimzation",
			XMPSchemaBibtex.getTextContent(
				d.getElementsByTagName("bibtex:title").item(0)).trim());

	}

}
