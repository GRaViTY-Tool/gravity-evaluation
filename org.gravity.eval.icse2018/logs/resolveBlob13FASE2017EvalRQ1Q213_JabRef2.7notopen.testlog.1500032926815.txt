LOG: 
LOG: !ENTRYLOG:  LOG: org.eclipse.egit.coreLOG:  LOG: 4LOG:  LOG: 0LOG:  LOG: 2017-07-14 13:48:48.825LOG: 
LOG: !MESSAGELOG:  LOG: Remove repository mapping of Git mapped resource for which project or mapped git repository has disappeared: 'RepositoryMapping[<empty> -> '../../.git', absolute path: '/home/speldszus/Documents/git/gravity-evaluation/org.gravity.eval.fase2017/.git' ]'LOG: 
LOG: !STACKLOG:  LOG: 0LOG: 
LOG: java.io.FileNotFoundException: 
	at org.eclipse.egit.core.project.GitProjectData.logAndUnmapGoneMappedResource(GitProjectData.java:720)
	at org.eclipse.egit.core.project.GitProjectData.map(GitProjectData.java:683)
	at org.eclipse.egit.core.project.GitProjectData.remapAll(GitProjectData.java:647)
	at org.eclipse.egit.core.project.GitProjectData.load(GitProjectData.java:630)
	at org.eclipse.egit.core.project.GitProjectData.get(GitProjectData.java:218)
	at org.eclipse.egit.core.internal.indexdiff.GitResourceDeltaVisitor.visit(GitResourceDeltaVisitor.java:115)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:64)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:48)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$6.resourceChanged(IndexDiffCacheEntry.java:730)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:374)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1469)
	at org.eclipse.core.internal.resources.Resource.copy(Resource.java:557)
	at org.eclipse.core.internal.resources.Project.internalCopy(Project.java:663)
	at org.eclipse.core.internal.resources.Project.copy(Project.java:218)
	at org.eclipse.core.internal.resources.Resource.copy(Resource.java:532)
	at org.gravity.eval.icse2018.util.EclipseProjectUtil.copyProject(EclipseProjectUtil.java:30)
	at org.gravity.eval.icse2018.util.EclipseProjectUtil.copyJavaProject(EclipseProjectUtil.java:14)
	at org.gravity.eval.icse2018.RQ1_2.perform(RQ1_2.java:131)
	at org.gravity.eval.icse2018.RQ1_2.resolveBlob(RQ1_2.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.gravity.eval.icse2018.util.ToFileLogger$1.evaluate(ToFileLogger.java:65)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:66)
	at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness.lambda$0(PlatformUITestHarness.java:43)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4536)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4154)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1121)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1022)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:150)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:693)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:610)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.runApp(NonUIThreadTestApplication.java:52)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.runApp(UITestApplication.java:43)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:46)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:673)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:610)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1519)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1492)
LOG: 1500032931908 GRaViTY convert project: 13_JabRef2.7_tmp_blob
LOG: 1500032931908 MoDisco discover project: 13_JabRef2.7_tmp_blob
LOG: 1500032939699 MoDisco discover project - done 7791ms
LOG: 1500032939699 MoDisco preprocessing
LOG: 1500032940411 MoDisco preprocessing - done 712ms
LOG: 1500032940411 eMoflon TGG fwd trafo
LOG: 1500033005067 eMoflon TGG fwd trafo - done 64656ms
LOG: 1500033005067 GRaViTY convert project - done 73159ms
LOG: 1500033005135 Hulk Anti-Pattern Detection
LOG: 1500033005135 Hulk Number of outgoing invocations
LOG: 1500033005150 Hulk Number of outgoing invocations - done 15ms
LOG: 1500033005150 Hulk Incomming Invocation custom
LOG: 1500033005166 Hulk Incomming Invocation custom - done 16ms
LOG: 1500033005166 Hulk Relation between Incoming and Outgoing Invocations
LOG: 1500033005175 Hulk Relation between Incoming and Outgoing Invocations - done 9ms
LOG: 1500033005175 Hulk Controller Class Smell
LOG: 1500033005547 Hulk Controller Class Smell - done 372ms
LOG: 1500033005547 Hulk Number of distinct fields accessed by each method
LOG: 1500033005564 Hulk Number of distinct fields accessed by each method - done 17ms
LOG: 1500033005564 Hulk Number of Methods
LOG: 1500033005574 Hulk Number of Methods - done 10ms
LOG: 1500033005574 Hulk Number of fields
LOG: 1500033005583 Hulk Number of fields - done 9ms
LOG: 1500033005583 Hulk Calculate LCOM5 on PG
LOG: 1500033005594 Hulk Calculate LCOM5 on PG - done 11ms
LOG: 1500033005594 Hulk Low Cohesion Smell
LOG: 1500033006296 Hulk Low Cohesion Smell - done 702ms
LOG: 1500033006296 Hulk Number of Members
LOG: 1500033006304 Hulk Number of Members - done 8ms
LOG: 1500033006304 Hulk Large Class Smell
LOG: 1500033007116 Hulk Large Class Smell - done 812ms
LOG: 1500033007116 Hulk Large Class or Low Cohesion Smell
LOG: 1500033007122 Hulk Large Class or Low Cohesion Smell - done 6ms
LOG: 1500033007122 Hulk God Class [Anti-Pattern]
LOG: 1500033007126 Hulk God Class [Anti-Pattern] - done 4ms
LOG: 1500033007126 Hulk Number of Getters
LOG: 1500033007139 Hulk Number of Getters - done 13ms
LOG: 1500033007139 Hulk Number of setter Methods
LOG: 1500033007152 Hulk Number of setter Methods - done 13ms
LOG: 1500033007152 Hulk Relation between Methods and Getters/Setters
LOG: 1500033007167 Hulk Relation between Methods and Getters/Setters - done 15ms
LOG: 1500033007167 Hulk Getter/Setter Smell
LOG: 1500033007199 Hulk Getter/Setter Smell - done 32ms
LOG: 1500033007199 Hulk Data Class Smell
LOG: 1500033008270 Hulk Data Class Smell - done 1071ms
LOG: 1500033008270 Hulk Data Class Accessor Smell
LOG: 1500033008296 Hulk Data Class Accessor Smell - done 26ms
LOG: 1500033008296 Hulk The Blob [Anti-Pattern]
LOG: 1500033008478 Hulk The Blob [Anti-Pattern] - done 182ms
LOG: 1500033008479 Hulk Calculate the Method accesses from Blob to DataClass
LOG: 1500033008925 Hulk Calculate the Method accesses from Blob to DataClass - done 446ms
LOG: 1500033008925 Hulk Connected Members
LOG: 1500033008929 Hulk Connected Members - done 4ms
LOG: 1500033008929 Hulk Member Cluster Accesses
LOG: 1500033008936 Hulk Member Cluster Accesses - done 7ms
LOG: 1500033008936 Hulk Alternative Resolve Blob [Anti-Pattern]
LOG: 1500033010088 Hulk Alternative Resolve Blob [Anti-Pattern] - done 1152ms
LOG: 1500033010088 Hulk Anti-Pattern Detection - done 4953ms
LOG: > SourceMeter for Java 8.1.0 (build 8717#45019  Linux64) - (C) 2001-2016 FrontEndART Ltd.
LOG: > Java version: 1.8.0_131
LOG: > Executing tasks. (Multithread:4)
LOG: >   [2017-07-14 13:50:10] Starting task: DirectoryBasedAnalysisTask
LOG: >   [2017-07-14 13:50:54] Task ended: DirectoryBasedAnalysisTask Result:OK
LOG: >   [2017-07-14 13:50:54] Starting task: JANFilterTask
LOG: >   [2017-07-14 13:50:55] Task ended: JANFilterTask Result:OK
LOG: >   [2017-07-14 13:50:55] Starting task: JAN2limTask
LOG: >   [2017-07-14 13:51:12] Task ended: JAN2limTask Result:OK
LOG: >   [2017-07-14 13:51:12] Starting task: ProfileTask
LOG: >   [2017-07-14 13:51:12] Starting task: Lim2metricsTask
LOG: >   [2017-07-14 13:51:12] Starting task: DcfTask
LOG: >   [2017-07-14 13:51:12] Task ended: ProfileTask Result:OK
LOG: >   [2017-07-14 13:51:14] Task ended: Lim2metricsTask Result:OK
LOG: >   [2017-07-14 13:51:25] Task ended: DcfTask Result:OK
LOG: >   [2017-07-14 13:51:25] Starting task: FaultHunterTask
LOG: >   [2017-07-14 13:51:25] Starting task: PMD2GraphTask
LOG: >   [2017-07-14 13:51:25] Starting task: VulnerabilityHunterTask
LOG: >   [2017-07-14 13:51:25] Starting task: AndroidHunterTask
LOG: >   [2017-07-14 13:51:26] Task ended: VulnerabilityHunterTask Result:OK
LOG: >   [2017-07-14 13:51:26] Task ended: AndroidHunterTask Result:OK
LOG: >   [2017-07-14 13:51:26] Task ended: FaultHunterTask Result:OK
LOG: >   [2017-07-14 13:51:27] Task ended: PMD2GraphTask Result:OK
LOG: >   [2017-07-14 13:51:27] Starting task: GraphMergeTask
LOG: >   [2017-07-14 13:51:29] Task ended: GraphMergeTask Result:OK
LOG: >   [2017-07-14 13:51:29] Starting task: MetricHunterTask
LOG: >   [2017-07-14 13:51:34] Task ended: MetricHunterTask Result:OK
LOG: >   [2017-07-14 13:51:34] Starting task: AddLicenceTask
LOG: >   [2017-07-14 13:51:35] Task ended: AddLicenceTask Result:OK
LOG: >   [2017-07-14 13:51:35] Starting task: GraphDumpTask
LOG: >   [2017-07-14 13:51:38] Task ended: GraphDumpTask Result:OK
LOG: void testGetAuthor() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorList() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthor_firstNameFirst() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthor_lastNameFirstCommas() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthor_lastNameFirst() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsLastFirstAnds() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsLastOnly() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsFirstFirst() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthor_Natbib() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsForAlphabetization() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthor_lastNameOnlyCommas() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsLastFirst() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static int size(String) [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthorForAlphabetization() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFixAuthor_firstNameFirstCommas() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsNatbib() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAuthorsFirstFirstAnds() [in AuthorListTest [in AuthorListTest.java [in tests.net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFileNaming1() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testBigNumbers() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFromStringSingle() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFileNaming() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFileNaming3() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testBigNumbers2() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testParse2() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testParseReader() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFromSingle2() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testParse() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testNewlineHandling() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testFromString() [in BibtexParserTest [in BibtexParserTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testSetBibtexEntry() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetSetPersonList() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testSetGetTextPropertyString() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetSequenceListString() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testSetGetBagListString() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetAllProperties() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testXMPSchemaBibtexElement() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetTextContent() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testXMPSchemaBibtexXMPMetadata() [in XMPSchemaBibtexTest [in XMPSchemaBibtexTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry createNewEntry() [in PdfImporter [in PdfImporter.java [in spl [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testOai22xml() [in OAI2ImportTest [in OAI2ImportTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testOnline() [in OAI2ImportTest [in OAI2ImportTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testParse() [in OAI2ImportTest [in OAI2ImportTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setUp() [in OAI2ImportTest [in OAI2ImportTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testOai23xml() [in OAI2ImportTest [in OAI2ImportTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testGetIsCustomImporter() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testProcessSubSup() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testImportEntriesWOS() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testImportEntries() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testImportEntriesMedline() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setUp() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testIsiAuthorsConvert() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testIsiAuthorConvert() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testImportIEEEExport() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testIsRecognizedFormat() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testImportEntriesINSPEC() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testMonthConvert() [in IsiImporterTest [in IsiImporterTest.java [in tests.net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadMultiple() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void tearDown() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadXMPUTF8() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testResolveStrings() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static String bibtexEntry2BibtexString(BibtexEntry) [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void assertEquals(BibtexEntry, BibtexEntry) [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setUp() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testResolveStrings2() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testXMPreadString() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testWriteSingleUpdatesDCAndInfo() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry t3BibtexEntry() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testXMLEscape() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testWriteMultiple() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadXMPEntryType() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadWriteDC() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testCommandLineSinglePdf() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadXMPSimple() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadWriteXMP() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry t2BibtexEntry() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testPrivacyFilter() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static BibtexEntry bibtexString2BibtexEntry(String) [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadXMPSeq() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testNewlineHandling() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testCommandLineSeveral() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testSimpleUpdate() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void testReadRawXMP() [in XMPUtilTest [in XMPUtilTest.java [in tests.net.sf.jabref.util [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setGroupFontAndIcon(JMenuItem, AbstractGroup) [in RightClickMenu [in RightClickMenu.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void popupMenuWillBecomeVisible(PopupMenuEvent) [in RightClickMenu [in RightClickMenu.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void popupMenuWillBecomeInvisible(PopupMenuEvent) [in RightClickMenu [in RightClickMenu.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void populateTypeMenu() [in RightClickMenu [in RightClickMenu.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setupPanel(JabRefFrame, BasePanel, boolean, String) [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setupJTextComponent(JComponent, AutoCompleteListener) [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void markIfModified(FieldEditor) [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void validateAllFields() [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean isFieldModified(FieldEditor) [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setEntry(BibtexEntry) [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void markBaseChanged() [in CompressedEntryEditorTab [in CompressedEntryEditorTab.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static void refreshFields() [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static void dmlPopTab_ST(BibtexDatabase, Object) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static DBTYPE getDBType(DBStrings) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static String getJDBCdriver(DBStrings) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static int dmlPopTab_EG_worker(GroupTreeNode, int, int, Object) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static void dmlPopTab_ET(Object) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static String createJDBCurl(DBStrings) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static Connection connectToDB(DBStrings) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static int dmlPopTab_GP_worker(GroupTreeNode, int, int, Object) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static void dmlPopTab_GT(Object) [in SQLutil [in SQLutil.java [in net.sf.jabref.sql [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void buildGUI() [in TabLabelPattern [in TabLabelPattern.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
  class <anonymous #1>
    void actionPerformed(ActionEvent)
  class <anonymous #2>
    void stateChanged(ChangeEvent)
LOG: void updatePreview(BibtexEntry, boolean, int) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
  class <anonymous #1>
    void actionPerformed(ActionEvent)
  class <anonymous #2>
    void run()
  class <anonymous #3>
    void run()
LOG: void setPreviewActive(boolean) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void processPopupTrigger(MouseEvent, int) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void mouseReleased(MouseEvent) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void updatePreviews() [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void switchPreview() [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void instantiatePreviews() [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void mouseClicked(MouseEvent) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
  class <anonymous #1>
    void run()
LOG: void entryEditorClosing(EntryEditor) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void keyTyped(KeyEvent) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void editSignalled() [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void mousePressed(MouseEvent) [in MainTableSelectionListener [in MainTableSelectionListener.java [in net.sf.jabref.gui [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void parse(ImportInspector, String, int, int) [in IEEEXploreFetcher [in IEEEXploreFetcher.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry parseNextEntry(String, int) [in IEEEXploreFetcher [in IEEEXploreFetcher.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry cleanup(BibtexEntry) [in IEEEXploreFetcher [in IEEEXploreFetcher.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: Font loadFont(String) [in AboutPanel [in AboutPanel.java [in net.sf.jabref.about [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void loadAboutText() [in AboutPanel [in AboutPanel.java [in net.sf.jabref.about [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void drawLine(AboutTextLine, Graphics) [in AboutPanel [in AboutPanel.java [in net.sf.jabref.about [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void paintComponent(Graphics) [in AboutPanel [in AboutPanel.java [in net.sf.jabref.about [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: List<PersonName> getSpecificAuthors(String, Element, String) [in MSBibEntry [in MSBibEntry.java [in net.sf.jabref.msbib [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: String getDate(BibtexEntry) [in MSBibEntry [in MSBibEntry.java [in net.sf.jabref.msbib [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: String getMSBibSourceType(BibtexEntry) [in MSBibEntry [in MSBibEntry.java [in net.sf.jabref.msbib [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry getBibtexRepresentation() [in MSBibEntry [in MSBibEntry.java [in net.sf.jabref.msbib [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void populateFromBibtex(BibtexEntry) [in MSBibEntry [in MSBibEntry.java [in net.sf.jabref.msbib [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntryType mapMSBibToBibtexType(String) [in MSBibEntry [in MSBibEntry.java [in net.sf.jabref.msbib [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void endDocument() [in CiteSeerUndoHandler [in CiteSeerUndoHandler.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean overwriteDialog(String, String, String) [in CiteSeerUndoHandler [in CiteSeerUndoHandler.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
  class <anonymous #1>
    void propertyChange(PropertyChangeEvent)
LOG: boolean makeOverwriteChoice(String, String, String) [in CiteSeerUndoHandler [in CiteSeerUndoHandler.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean showsFileInGenFields() [in FileLinksUpgradeWarning [in FileLinksUpgradeWarning.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void makeChanges(BasePanel, ParserResult, boolean, boolean, String) [in FileLinksUpgradeWarning [in FileLinksUpgradeWarning.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void init() [in SynchronizeFileField [in SynchronizeFileField.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void run() [in SynchronizeFileField [in SynchronizeFileField.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void linkPdfToEntry(String, MainTable, int) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean doCopy(String, ExternalFileType, String, NamedCompound) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean tryXmpImport(String, ExternalFileType, boolean, NamedCompound) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void doLink(BibtexEntry, ExternalFileType, String, boolean, NamedCompound) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean doMove(String, ExternalFileType, String, NamedCompound) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void linkPdfToEntry(String, MainTable, BibtexEntry) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void handleDroppedfile(String, ExternalFileType, boolean, BibtexEntry) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void handleDroppedfile(String, ExternalFileType, boolean, MainTable, int) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: int showLinkMoveCopyRenameDialog(String, ExternalFileType, String, boolean, boolean) [in DroppedFileHandler [in DroppedFileHandler.java [in net.sf.jabref.external [in src [in 13_JabRef2.7_tmp_blob]]]]]
  class <anonymous #1>
    void stateChanged(ChangeEvent)
LOG: void update() [in MyWorker [in ImportMenuItem [in ImportMenuItem.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]]
LOG: void init() [in MyWorker [in ImportMenuItem [in ImportMenuItem.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]]
LOG: void run() [in MyWorker [in ImportMenuItem [in ImportMenuItem.java [in net.sf.jabref.imports [in src [in 13_JabRef2.7_tmp_blob]]]]]]
LOG: String doLayout(BibtexEntry, BibtexDatabase) [in LayoutEntry [in LayoutEntry.java [in net.sf.jabref.export.layout [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: String doLayout(BibtexDatabase, String) [in LayoutEntry [in LayoutEntry.java [in net.sf.jabref.export.layout [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static LayoutFormatter[] getOptionalLayout(String, String) [in LayoutEntry [in LayoutEntry.java [in net.sf.jabref.export.layout [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static LayoutFormatter getLayoutFormatterFromPlugins(String) [in LayoutEntry [in LayoutEntry.java [in net.sf.jabref.export.layout [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void scanEntries(EntrySorter, EntrySorter, EntrySorter) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void scanMetaData(MetaData, MetaData, MetaData) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void scanGroups(MetaData, MetaData, MetaData) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void displayResult(DisplayResultCallback) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
  class <anonymous #1>
    void run()
LOG: void run() [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void scanPreamble(BibtexDatabase, BibtexDatabase, BibtexDatabase) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: BibtexEntry bestFit(EntrySorter, EntrySorter, int) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: boolean changesFound() [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void scanStrings(BibtexDatabase, BibtexDatabase, BibtexDatabase) [in ChangeScanner [in ChangeScanner.java [in net.sf.jabref.collab [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: String getDate(BibtexEntry) [in MODSEntry [in MODSEntry.java [in net.sf.jabref.mods [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: Element getDOMrepresentation(Document) [in MODSEntry [in MODSEntry.java [in net.sf.jabref.mods [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void populateFromBibtex(BibtexEntry) [in MODSEntry [in MODSEntry.java [in net.sf.jabref.mods [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: String getMODSgenre(BibtexEntry) [in MODSEntry [in MODSEntry.java [in net.sf.jabref.mods [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void populateExtensionFields(BibtexEntry) [in MODSEntry [in MODSEntry.java [in net.sf.jabref.mods [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: ParserResult fetch(String) [in JabRef [in JabRef.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static ParserResult importToOpenBase(String) [in JabRef [in JabRef.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void startSidePanePlugins(JabRefFrame) [in JabRef [in JabRef.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: void setupOptions() [in JabRef [in JabRef.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: static ParserResult openBibFile(String, boolean) [in JabRef [in JabRef.java [in net.sf.jabref [in src [in 13_JabRef2.7_tmp_blob]]]]]
LOG: 1500033130417 GRaViTY convert project: 13_JabRef2.7_tmp_blob
LOG: 1500033130417 MoDisco discover project: 13_JabRef2.7_tmp_blob
LOG: 1500033137040 MoDisco discover project - done 6623ms
LOG: 1500033137040 MoDisco preprocessing
LOG: 1500033137774 MoDisco preprocessing - done 734ms
LOG: 1500033137774 eMoflon TGG fwd trafo
LOG: 1500033211010 eMoflon TGG fwd trafo - done 73236ms
LOG: 1500033211010 GRaViTY convert project - done 80593ms
LOG: 1500033211272 Hulk Anti-Pattern Detection
LOG: 1500033211272 Hulk Number of outgoing invocations
LOG: 1500033211286 Hulk Number of outgoing invocations - done 14ms
LOG: 1500033211286 Hulk Incomming Invocation custom
LOG: 1500033211301 Hulk Incomming Invocation custom - done 15ms
LOG: 1500033211301 Hulk Relation between Incoming and Outgoing Invocations
LOG: 1500033211312 Hulk Relation between Incoming and Outgoing Invocations - done 11ms
LOG: 1500033211312 Hulk Controller Class Smell
LOG: 1500033211683 Hulk Controller Class Smell - done 371ms
LOG: 1500033211683 Hulk Number of distinct fields accessed by each method
LOG: 1500033211700 Hulk Number of distinct fields accessed by each method - done 17ms
LOG: 1500033211700 Hulk Number of Methods
LOG: 1500033211709 Hulk Number of Methods - done 9ms
LOG: 1500033211709 Hulk Number of fields
LOG: 1500033211720 Hulk Number of fields - done 11ms
LOG: 1500033211720 Hulk Calculate LCOM5 on PG
LOG: 1500033211733 Hulk Calculate LCOM5 on PG - done 13ms
LOG: 1500033211733 Hulk Low Cohesion Smell
LOG: 1500033212437 Hulk Low Cohesion Smell - done 704ms
LOG: 1500033212437 Hulk Number of Members
LOG: 1500033212445 Hulk Number of Members - done 8ms
LOG: 1500033212445 Hulk Large Class Smell
LOG: 1500033213262 Hulk Large Class Smell - done 817ms
LOG: 1500033213262 Hulk Large Class or Low Cohesion Smell
LOG: 1500033213268 Hulk Large Class or Low Cohesion Smell - done 6ms
LOG: 1500033213268 Hulk God Class [Anti-Pattern]
LOG: 1500033213271 Hulk God Class [Anti-Pattern] - done 3ms
LOG: 1500033213271 Hulk Number of Getters
LOG: 1500033213283 Hulk Number of Getters - done 12ms
LOG: 1500033213283 Hulk Number of setter Methods
LOG: 1500033213296 Hulk Number of setter Methods - done 13ms
LOG: 1500033213296 Hulk Relation between Methods and Getters/Setters
LOG: 1500033213312 Hulk Relation between Methods and Getters/Setters - done 16ms
LOG: 1500033213312 Hulk Getter/Setter Smell
LOG: 1500033213346 Hulk Getter/Setter Smell - done 34ms
LOG: 1500033213346 Hulk Data Class Smell
LOG: 1500033214400 Hulk Data Class Smell - done 1054ms
LOG: 1500033214400 Hulk Data Class Accessor Smell
LOG: 1500033214425 Hulk Data Class Accessor Smell - done 25ms
LOG: 1500033214425 Hulk The Blob [Anti-Pattern]
LOG: 1500033214592 Hulk The Blob [Anti-Pattern] - done 167ms
LOG: 1500033214592 Hulk Anti-Pattern Detection - done 3320ms
LOG: > SourceMeter for Java 8.1.0 (build 8717#45019  Linux64) - (C) 2001-2016 FrontEndART Ltd.
LOG: > Java version: 1.8.0_131
LOG: > Executing tasks. (Multithread:4)
LOG: >   [2017-07-14 13:53:34] Starting task: DirectoryBasedAnalysisTask
LOG: >   [2017-07-14 13:54:17] Task ended: DirectoryBasedAnalysisTask Result:OK
LOG: >   [2017-07-14 13:54:17] Starting task: JANFilterTask
LOG: >   [2017-07-14 13:54:17] Task ended: JANFilterTask Result:OK
LOG: >   [2017-07-14 13:54:17] Starting task: JAN2limTask
LOG: >   [2017-07-14 13:54:34] Task ended: JAN2limTask Result:OK
LOG: >   [2017-07-14 13:54:34] Starting task: ProfileTask
LOG: >   [2017-07-14 13:54:34] Starting task: Lim2metricsTask
LOG: >   [2017-07-14 13:54:34] Starting task: DcfTask
LOG: >   [2017-07-14 13:54:35] Task ended: ProfileTask Result:OK
LOG: >   [2017-07-14 13:54:36] Task ended: Lim2metricsTask Result:OK
LOG: >   [2017-07-14 13:54:48] Task ended: DcfTask Result:OK
LOG: >   [2017-07-14 13:54:48] Starting task: PMD2GraphTask
LOG: >   [2017-07-14 13:54:48] Starting task: AndroidHunterTask
LOG: >   [2017-07-14 13:54:48] Starting task: FaultHunterTask
LOG: >   [2017-07-14 13:54:48] Starting task: VulnerabilityHunterTask
LOG: >   [2017-07-14 13:54:49] Task ended: FaultHunterTask Result:OK
LOG: >   [2017-07-14 13:54:49] Task ended: AndroidHunterTask Result:OK
LOG: >   [2017-07-14 13:54:49] Task ended: VulnerabilityHunterTask Result:OK
LOG: >   [2017-07-14 13:54:50] Task ended: PMD2GraphTask Result:OK
LOG: >   [2017-07-14 13:54:50] Starting task: GraphMergeTask
LOG: >   [2017-07-14 13:54:52] Task ended: GraphMergeTask Result:OK
LOG: >   [2017-07-14 13:54:52] Starting task: MetricHunterTask
LOG: >   [2017-07-14 13:54:57] Task ended: MetricHunterTask Result:OK
LOG: >   [2017-07-14 13:54:57] Starting task: AddLicenceTask
LOG: >   [2017-07-14 13:54:57] Task ended: AddLicenceTask Result:OK
LOG: >   [2017-07-14 13:54:57] Starting task: GraphDumpTask
LOG: >   [2017-07-14 13:55:00] Task ended: GraphDumpTask Result:OK
